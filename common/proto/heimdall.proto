syntax = "proto3";

package proto;

//heimdall service
service HeimdallService {
  rpc Regist (RegistRequest) returns (RegistResponse) {
  }
  rpc UnRegist (UnRegistRequest) returns (UnRegistResponse) {
  }
  rpc Log (LogRequest) returns (LogResponse) {
  }
  rpc Heartbeat (HeartbeatRequest) returns (HeartbeatResponse) {
  }
  rpc Rule (RuleRequest) returns (RuleResponse) {
  }
}

message RegistRequest {
  Agent agent = 1;
}

message RegistResponse {
  string agent_id = 1;
}

message UnRegistRequest {
  string agent_id=1;
}

message UnRegistResponse {
}

message LogRequest {
  Log log = 1;
}

message LogResponse {
}

message HeartbeatRequest {
  Heartbeat heartbeat = 1;
}

message HeartbeatResponse {
  int32 lastupdate = 1;
}

message RuleRequest {
}

message RuleResponse {
  repeated Rule rules =1;
}

message Agent {
  string id = 1;
  string hostname = 2;
  string version = 3;
  string hostaddress = 4;
  string deviceinfo = 5;
  int32 status=6;
  int32 health = 7;
  int32 created_at=8;
  int32 lastcheck_at=9;
}

message Log {
  string agent_id=1;
  string hostname = 2;
  string version = 3;
  string hostaddress = 4;
  int64 start = 5;
  int64 stop = 6;
  int32 match = 7;
  string ruleid = 8;
  bytes request = 9;
}

message Heartbeat {
  string agent_id=1;
  string hostname = 2;
  string version = 3;
  string hostaddress = 4;
  int32 count_request = 5;
  int32 count_alert = 6;
  int32 count_doubt = 7;
  int32 uptime = 8;
  string load1 = 9;
  string load5 = 10;
  string load15 = 11;
  int32 memusage = 12;
  int32 cpuusage = 13;
  int32 gorutines = 14;
  int32 gc_count = 15;
  int32 gc_time = 16;
}

message Rule {
  string content=1;
}
